#include "ctagSoundProcessorPingPongPan.hpp"
#include <iostream>
#include "helpers/ctagFastMath.hpp"

#define SAMPLE_RATE 44100.0
static const float k2PI = 6.283185307f;

using namespace CTAG::SP;

ctagSoundProcessorPingPongPan::ctagSoundProcessorPingPongPan() {
    setIsStereo();
    model = std::make_unique<ctagSPDataModel>(id, isStereo);
    model->LoadPreset(0);
}

void ctagSoundProcessorPingPongPan::Process(const ProcessData &data) {
	float fFrequency = static_cast<float>(frequency) / 10.f;
	float fWidth = static_cast<float>(width) / 10.f;

	waveSpeed = (k2PI * fFrequency / 100.0f)/SAMPLE_RATE;

	for (uint32_t i=0; i < this->bufSz; ++i)
    {
        pan = std::fmin(std::fmax(CTAG::SP::HELPERS::fastsin(wavePos) * (fWidth/100.0f), -1.0f), 1.0f);

        if ((wavePos += waveSpeed) >= k2PI)
            wavePos -= k2PI;

        data.buf[i * 2 + this->processCh] = data.buf[i * 2 + this->processCh] * (pan > 0.0f ? 1.0f-pan : 1.0f);
        data.buf[i * 2 + this->processCh + 1] = data.buf[i * 2 + this->processCh + 1] * (pan < 0.0f ? 1.0f+pan : 1.0f);
	}
}

ctagSoundProcessorPingPongPan::~ctagSoundProcessorPingPongPan() {
}

const char *ctagSoundProcessorPingPongPan::GetCStrID() const {
    return id.c_str();
}


void ctagSoundProcessorPingPongPan::setParamValueInternal(const string& id, const string& key, const int val) {
// autogenerated code here
// sectionCpp0
if(id.compare("frequency") == 0){
	if(key.compare("current") == 0){
		frequency = val;
		return;
	}else if(key.compare("cv") == 0){
		if(val >= -1 && val <= 3)
			cv_frequency = val;
	}
	return;
}
if(id.compare("width") == 0){
	if(key.compare("current") == 0){
		width = val;
		return;
	}else if(key.compare("cv") == 0){
		if(val >= -1 && val <= 3)
			cv_width = val;
	}
	return;
}
// sectionCpp0

}

void ctagSoundProcessorPingPongPan::loadPresetInternal() {
// autogenerated code here
// sectionCpp1
frequency = model->GetParamValue("frequency", "current");
cv_frequency = model->GetParamValue("frequency", "cv");
width = model->GetParamValue("width", "current");
cv_width = model->GetParamValue("width", "cv");
// sectionCpp1

}
