/**
 * Title: Ping Pong Pan based on DISTRHO Mini-Series.
 * Author: Ported by Henrik Langer (Instruments of Things) to TBD
 * Email: henrik@instrumentsofthings.com
 * Date: September 2020
 * 
 * More information at https://github.com/DISTRHO/Mini-Series
 */

#include <atomic>
#include "ctagSoundProcessor.hpp"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorPingPongPan : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &) override;

            virtual ~ctagSoundProcessorPingPongPan();

            ctagSoundProcessorPingPongPan();

            virtual const char *GetCStrID() const override;

        private:
            void setParamValueInternal(const string &id, const string &key, const int val) override;
            void loadPresetInternal() override;

// autogenerated code here
// sectionHpp
const string id = "PingPongPan";
void setIsStereo(){isStereo = true;}
atomic<int32_t> frequency, cv_frequency;
atomic<int32_t> width, cv_width;
// sectionHpp


            // private attributes could go here
            float waveSpeed;
            float wavePos;
            float pan;
        };
    }
}