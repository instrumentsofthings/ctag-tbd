/**
 * Title: Virtual Analog Moog Ladder Filter based on design by D'Angelo, Valimaki.
 * Author: Ported by Henrik Langer (Instruments of Things) to TBD
 * Email: henrik@instrumentsofthings.com
 * Date: September 2020
 * 
 * This model is based on a reference implementation of an algorithm developed by
 * Stefano D'Angelo and Vesa Valimaki, presented in a paper published at ICASSP in 2013.
 * This improved model is based on a circuit analysis and compared against a reference
 * Ngspice simulation. In the paper, it is noted that this particular model is
 * more accurate in preserving the self-oscillating nature of the real filter.
 * References: "An Improved Virtual Analog Model of the Moog Ladder Filter"
 * Original Implementation: D'Angelo, Valimaki
 * 
 * More information at https://github.com/ddiakopoulos/MoogLadders
 */

#define MOOG_PI     3.14159265358979323846264338327950288
#define VT          0.312  // Thermal voltage (26 milliwats at room temperature)
#define SAMPLE_RATE 44100.0

#include <atomic>
#include "ctagSoundProcessor.hpp"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorMoogFilt : public ctagSoundProcessor {
        public:
            void Process(const ProcessData &) override;

            virtual ~ctagSoundProcessorMoogFilt();

            ctagSoundProcessorMoogFilt();

            const char *GetCStrID() const override;

        private:
            void setParamValueInternal(const string &id, const string &key, const int val) override;
            void loadPresetInternal() override;

            double V[4];
	        double dV[4];
	        double tV[4];
	
	        double x;
	        double g;

// autogenerated code here
// sectionHpp
const string id = "MoogFilt";
void setIsStereo(){isStereo = false;}
atomic<int32_t> cutoff, cv_cutoff;
atomic<int32_t> resonance, cv_resonance;
atomic<int32_t> drive, cv_drive;
// sectionHpp






            // private attributes could go here

        };
    }
}